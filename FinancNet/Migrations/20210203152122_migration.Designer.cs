// <auto-generated />
using System;
using FinancNet.Repositories.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinancNet.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20210203152122_migration")]
    partial class migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("FinancNet.Models.Categoria", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("paiId")
                        .HasColumnType("bigint");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("usuario")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("paiId");

                    b.ToTable("categoria");
                });

            modelBuilder.Entity("FinancNet.Models.Conta", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("numero")
                        .HasColumnType("text");

                    b.Property<double>("saldo")
                        .HasColumnType("double");

                    b.Property<string>("usuario")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("conta");
                });

            modelBuilder.Entity("FinancNet.Models.Lancamento", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("categoriaId")
                        .HasColumnType("bigint");

                    b.Property<long>("contaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime");

                    b.Property<string>("descricao")
                        .HasColumnType("text");

                    b.Property<string>("tipo")
                        .HasColumnType("text");

                    b.Property<string>("usuario")
                        .HasColumnType("text");

                    b.Property<double>("valor")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.HasIndex("categoriaId");

                    b.HasIndex("contaId");

                    b.ToTable("lancamento");
                });

            modelBuilder.Entity("FinancNet.Models.Transferencia", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("contaCreditoId")
                        .HasColumnType("bigint");

                    b.Property<long>("contaDebitoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime");

                    b.Property<string>("usuario")
                        .HasColumnType("text");

                    b.Property<double>("valor")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.HasIndex("contaCreditoId");

                    b.HasIndex("contaDebitoId");

                    b.ToTable("transferencia");
                });

            modelBuilder.Entity("FinancNet.Models.Usuario", b =>
                {
                    b.Property<string>("login")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.Property<string>("senha")
                        .HasColumnType("text");

                    b.HasKey("login");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("FinancNet.Models.Categoria", b =>
                {
                    b.HasOne("FinancNet.Models.Categoria", "pai")
                        .WithMany("filhos")
                        .HasForeignKey("paiId");

                    b.Navigation("pai");
                });

            modelBuilder.Entity("FinancNet.Models.Lancamento", b =>
                {
                    b.HasOne("FinancNet.Models.Categoria", "categoria")
                        .WithMany()
                        .HasForeignKey("categoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancNet.Models.Conta", "conta")
                        .WithMany()
                        .HasForeignKey("contaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");

                    b.Navigation("conta");
                });

            modelBuilder.Entity("FinancNet.Models.Transferencia", b =>
                {
                    b.HasOne("FinancNet.Models.Conta", "contaCredito")
                        .WithMany()
                        .HasForeignKey("contaCreditoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancNet.Models.Conta", "contaDebito")
                        .WithMany()
                        .HasForeignKey("contaDebitoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("contaCredito");

                    b.Navigation("contaDebito");
                });

            modelBuilder.Entity("FinancNet.Models.Categoria", b =>
                {
                    b.Navigation("filhos");
                });
#pragma warning restore 612, 618
        }
    }
}
