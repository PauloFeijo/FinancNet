// <auto-generated />
using System;
using FinancNet.Repositories.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinancNet.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20210222122842_migration")]
    partial class migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("FinancNet.Models.Categoria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<long?>("PaiId")
                        .HasColumnType("bigint");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("PaiId");

                    b.ToTable("categoria");
                });

            modelBuilder.Entity("FinancNet.Models.Conta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Numero")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<double>("Saldo")
                        .HasColumnType("double");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("conta");
                });

            modelBuilder.Entity("FinancNet.Models.Lancamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("CategoriaId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ContaId");

                    b.ToTable("lancamento");
                });

            modelBuilder.Entity("FinancNet.Models.Transferencia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ContaCreditoId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContaDebitoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("ContaCreditoId");

                    b.HasIndex("ContaDebitoId");

                    b.ToTable("transferencia");
                });

            modelBuilder.Entity("FinancNet.Models.Usuario", b =>
                {
                    b.Property<string>("Login")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Login");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("FinancNet.Models.Categoria", b =>
                {
                    b.HasOne("FinancNet.Models.Categoria", "Pai")
                        .WithMany("Filhos")
                        .HasForeignKey("PaiId");

                    b.Navigation("Pai");
                });

            modelBuilder.Entity("FinancNet.Models.Lancamento", b =>
                {
                    b.HasOne("FinancNet.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancNet.Models.Conta", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("FinancNet.Models.Transferencia", b =>
                {
                    b.HasOne("FinancNet.Models.Conta", "ContaCredito")
                        .WithMany()
                        .HasForeignKey("ContaCreditoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancNet.Models.Conta", "ContaDebito")
                        .WithMany()
                        .HasForeignKey("ContaDebitoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaCredito");

                    b.Navigation("ContaDebito");
                });

            modelBuilder.Entity("FinancNet.Models.Categoria", b =>
                {
                    b.Navigation("Filhos");
                });
#pragma warning restore 612, 618
        }
    }
}
